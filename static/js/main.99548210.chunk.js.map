{"version":3,"sources":["components/MyComponent.js","components/MyInput.js","App.js","index.js"],"names":["MyComponent","props","toggleClass","bind","state","active","e","currentState","this","setState","target","parentNode","className","console","log","text","onClick","Component","MyInput","value","updateValue","type","placeholder","onChange","App","showButton","toggleButton","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAiCeA,E,kDA9BX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,CACXC,QAAQ,GALI,E,+CASlB,SAAYC,GACR,IAAMC,EAAeC,KAAKJ,MAAMC,OAChCG,KAAKC,SAAS,CAACJ,QAASE,IAET,UADED,EAAEI,OAAOC,WAAWC,WAEjCC,QAAQC,IAAI,gB,oBAIpB,WACI,IAAQC,EAASP,KAAKP,MAAdc,KACAV,EAAWG,KAAKJ,MAAhBC,OACR,OACI,qBAAKO,UAAWP,EAAS,SAAW,KACpCW,QAASR,KAAKN,YADd,SAEI,4BAAIa,U,GAzBME,aCuBXC,E,kDAtBX,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IACDG,MAAQ,CACTe,MAAO,MAHG,E,+CAOlB,WACIX,KAAKC,SAAS,CAACU,MAAOX,KAAKJ,MAAMe,U,oBAGrC,WACI,IAAQA,EAAUX,KAAKJ,MAAfe,MACAC,EAAgBZ,KAAKP,MAArBmB,YACR,OACI,8BACI,uBAAOC,KAAK,OAAOC,YAAY,UAAUH,MAAOA,EAAOI,SAAUH,U,GAjB3DH,aC0BPO,G,wDAtBb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDG,MAAQ,CACXqB,YAAY,GAHE,E,gDAOlB,WACEjB,KAAKC,SAAS,CAAEgB,YAAajB,KAAKJ,MAAMqB,e,oBAG1C,WAAU,IAAD,OACCA,EAAejB,KAAKJ,MAApBqB,WACR,OACE,gCACE,wBAAQT,QAAS,kBAAM,EAAKU,gBAA5B,sBACED,EAAa,cAAC,EAAD,CAAaV,KAAK,YAAe,cAAC,EAAD,CAASI,MAAOX,KAAKJ,MAAMe,e,GAjBjEF,cCAlBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.99548210.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass MyComponent extends Component {\n    constructor(props){\n        super(props); \n\n        this.toggleClass = this.toggleClass.bind(this);\n        this.state = {\n          active: false,\n        };\n    }\n\n    toggleClass(e) {\n        const currentState = this.state.active;\n        this.setState({active: !currentState});\n        const divClass = e.target.parentNode.className;\n        if(divClass != \"active\") {\n            console.log(\"not active\")\n        }\n    };\n\n    render(){\n        const { text } = this.props;\n        const { active } = this.state;\n        return(\n            <div className={active ? 'active' : null}\n            onClick={this.toggleClass}>\n                <p>{text}</p>\n            </div>\n        )\n    }\n}\n\nexport default MyComponent;","import React, { Component } from \"react\";\n\nclass MyInput extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            value: null,\n        }\n    }\n\n    updateValue() {\n        this.setState({value: this.state.value});\n    }\n\n    render() {\n        const { value } = this.state;\n        const { updateValue } = this.props;\n        return (\n            <div>\n                <input type=\"text\" placeholder=\"edit me\" value={value} onChange={updateValue} />\n            </div>\n        )\n    }\n}\n\nexport default MyInput;","import React, { Component } from \"react\";\nimport MyComponent from \"./components/MyComponent\";\nimport MyInput from \"./components/MyInput\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      showButton: false,\n    };\n  }\n\n  toggleButton() {\n    this.setState({ showButton: !this.state.showButton });\n  };\n\n  render() {\n    const { showButton } = this.state;\n    return (\n      <div>\n        <button onClick={() => this.toggleButton()}>click me</button>\n        { showButton ? <MyComponent text=\"edit me\" /> : <MyInput value={this.state.value} /> }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}